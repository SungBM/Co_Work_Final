<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.naver.cowork.mybatis.mapper.ProjectMapper">

	<update id="updateUserCheckInfoClear" parameterType="java.util.HashMap">
		update PROBOARD_CHECK_USER
		set IS_CHECKED = 0
		where PRO_BOARD_NUM = ${pbNum}
		and USER_ID = '${id}'
	</update>
	
	<update id="updateUserCheckInfo" parameterType="java.util.HashMap">
		update PROBOARD_CHECK_USER
		set IS_CHECKED = 1
		where PRO_BOARD_NUM = ${pbNum}
		and USER_ID = '${id}'
	</update>

	<select id="getProBoardCheckUserList" resultType="Proboard_check_user" parameterType="String">
		select pro_board_num,pro_board_num,is_checked from proboard_check_user 
		where user_id = #{id}
	</select>

	<update id="checkedBookmark" parameterType="int">
		update project_board 
		set pro_board_bookmark = 1
		where pro_board_num = #{pbNum}
	</update>

	<select id="ProjectBookmarkChecked" resultType="String" parameterType="int">
		select pro_board_subject from project_board
		where pro_board_num = ${pbNum}
	</select>
	
	<update id="checkedClearBookmark" parameterType="int">
		update project_board 
		set pro_board_bookmark = 0
		where pro_board_num = #{pbNum}
	</update>

	<select id="ProjectBookmarkCheckedClear" resultType="String" parameterType="int">
		select pro_board_subject from project_board
		where pro_board_num = ${pbNum}
	</select>

	<select id="getProjectBookmarkList" resultType="String" parameterType="int">
		select pro_board_subject from (
			select rownum,pro_board_subject from project_board 
			where project_num = ${pNum} 
			and pro_board_bookmark = 1 )
		where rownum <![CDATA[ <= 5 ]]>
	</select>


	<select id="getCheckCount" resultType="int" parameterType="int">
		select pro_board_like from project_board 
		where pro_board_num = ${pbNum}
	</select>

	<update id="decreaseCheck" parameterType="int">
		update project_board 
		set pro_board_like = pro_board_like-1
		where PRO_BOARD_NUM = ${pbNum}
	</update>
	
	<update id="increaseCheck" parameterType="int">
		update project_board 
		set pro_board_like = pro_board_like+1
		where PRO_BOARD_NUM = ${pbNum}
	</update>

	<select id="getProjectName" parameterType="int" resultType="String">
		SELECT PROJECT_NAME,PROJECT_NUM FROM PROJECT WHERE PROJECT_NUM = ${p_num}
	</select>

	<select id="getPojectBoardFeed" parameterType="int" resultType="Project_Board">
		SELECT * FROM PROJECT_BOARD WHERE PROJECT_NUM = ${p_num}
	</select>

	<select id="getProjectList" resultType="Project" parameterType="String">
	SELECT PR.*, U.USER_IMG project_admin_img FROM ( SELECT * FROM 
					    (SELECT ROWNUM row_num,P.* FROM (SELECT * FROM PROJECT ORDER BY PROJECT_END)P 
					     WHERE <![CDATA[  ROWNUM <= 20 ]]>) 
					WHERE ROWNUM >= 1
					AND ROWNUM <![CDATA[  <= 20 ]]>
					AND PROJECT_END > SYSDATE 
					OR PROJECT_END IS NULL )PR 
					INNER JOIN USER_INFO U 
					ON PR.PROJECT_ADMIN = U.USER_ID 
					ORDER BY PROJECT_END
	</select>
	<select id="getDeadLineProjects" resultType="Project" parameterType="String">
		SELECT PR.*,U.USER_IMG project_admin_img FROM ( SELECT * FROM (SELECT ROWNUM row_num,P.* FROM (SELECT * FROM PROJECT ORDER BY PROJECT_END)P 
								                WHERE ROWNUM <![CDATA[ <= 20 ]]>) WHERE ROWNUM >= 1 AND ROWNUM  <![CDATA[ <= 20 ]]> 
								                AND PROJECT_END <![CDATA[ < SYSDATE  ]]> )PR 
								INNER JOIN USER_INFO U 
								ON PR.PROJECT_ADMIN = U.USER_ID 
	</select>

		<insert id="insert" parameterType="Project">
		    insert into PROJECT (project_num, project_name, project_state, project_admin, project_start, project_end,project_priority)
		    values (nvl((select max(project_num) from PROJECT)+1, 0),
		            #{project_name}, #{project_state}, #{project_admin},
		            #{project_start}, #{project_end}, #{project_priority})
		</insert>
		
		<insert id="insert_user" parameterType="Project_User">
		  <selectKey keyProperty="PROJECT_USER_NO" resultType="long" order="BEFORE">
		    SELECT PROJECT_USER_NO_SEQ.NEXTVAL FROM DUAL
		  </selectKey>
		  insert into PROJECT_USER(PROJECT_USER_NO, PROJECT_NUM, USER_ID)
		  values ('${PROJECT_USER_NO}', #{PROJECT_NUM}, #{USER_ID})
		</insert>

	 <insert id="insertProjectBoard">
	  INSERT INTO PROJECT_BOARD (PRO_BOARD_CARTEGORY, PRO_BOARD_SUBJECT, PRO_BOARD_STATE, PRO_BOARD_PRIORITY, PRO_BOARD_START, PRO_BOARD_END, PRO_BOARD_CONTENT, PRO_BOARD_CREATER_NAME, PRO_BOARD_CREATER_ID, PRO_BOARD_FILE, PRO_BOARD_NUM)
		VALUES ('글', #{PRO_BOARD_SUBJECT}, '진행', '높음', #{PRO_BOARD_START}, #{PRO_BOARD_END}, #{PRO_BOARD_CONTENT}, 'HTA123', 'HTA123', #{PRO_BOARD_FILE, jdbcType=VARCHAR}, seq_project_board.nextval)
 	 </insert>

	
	<select id="getProjectDetailList" resultType="project_board">
       SELECT PRO_BOARD_SUBJECT, PRO_BOARD_STATE, PRO_BOARD_PRIORITY, PRO_BOARD_CREATER_NAME, 
       PRO_BOARD_START, PRO_BOARD_END, PRO_BOARD_CREATE_DATE, PRO_BOARD_NUM
		FROM Project_Board
		ORDER BY PRO_BOARD_CREATE_DATE DESC

    </select>


	<select id="getListCount" resultType="int">
		select count(*) from project
	</select>
	
	<select id="getProjectUser" parameterType="int" resultType="com.naver.cowork.domain.Project_User">
		SELECT P.USER_ID,P.PROJECT_NUM , U.USER_NAME, U.USER_IMG FROM PROJECT_USER P
								INNER JOIN USER_INFO U 
								ON P.USER_ID = U.USER_ID 
								WHERE PROJECT_NUM = #{project_num}
	</select>

	
	<select id="getProjectUserCount" parameterType="int" resultType="int">
		select count(*) from project_user where project_num = #{project_num}
	</select> 
	
	<select id="getAllProjects" resultType="Project">
        SELECT * FROM PROJECT;
    </select>

    <select id="getProjectsByCreatorId" resultType="Project">
        SELECT * FROM PROJECT_BOARD WHERE PRO_BOARD_CREATER_ID = #{PRO_BOARD_CREATER_ID};
    </select>

</mapper>